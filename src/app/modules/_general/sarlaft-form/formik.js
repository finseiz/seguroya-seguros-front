import * as Yup from "yup";

export const sarlaftInitialValues = {
    date: "",
    requestType: "VINCULACION",
    vinculationType: "",
    otherVinculationType: "",
    tie_1: "",
    otherTie1: "",
    tie_2: "",
    otherTie2: "",
    tie_3: "",
    otherTie3: "",
    fullname: "",
    surname: "",
    secondSurname: "",
    documentType: "",
    document: "",
    expeditionDate: "",
    expeditionCity: "",
    birthdate: "",
    birthCity: "",
    nationality: "",
    secondNationality: "",
    departmentRes: "",
    cityRes: "",
    email: "",
    address: "",
    department: "",
    city: "",
    phone: "",
    cellphone: "",
    mainActivity: "",
    sector: "",
    ciiu: "",
    activityType: "",
    otherActivityType: "",
    occupation: "",
    position: "",
    companyName: "",
    companyAddress: "",
    companyDepartment: "",
    companyCity: "",
    companyPhone: "",
    optionalActivity: "",
    secondeCiiu: "",
    productOrService: "",
    income: "",
    expenses: "",
    assets: "",
    passives: "",
    heritage: "",
    otherIncome: "",
    otherIncomeDesc: "",
    publicExposed: "",
    tiesPublicExposed: "",
    publicResources: "",
    otherCountyObligations: "",
    sourceFunds: "",
    typeOfInternationalTransactions: "",
    otherTypeOfIntTransaction: "",
    internationalFinancialProduct: "",
    internationalAccounts: "",
    
};

export const sarlaftSchema = Yup.object().shape({
    date: Yup.string().required("Campo requerido"),
    requestType: Yup.string().required("Campo requerido"),
    vinculationType: Yup.string().required("Campo requerido"),
    otherVinculationType: Yup.string().when("vinculationType", { is: "OTRO", then: Yup.string().required("Campo requerido") }),
    tie_1: Yup.string().required("Campo requerido"),
    otherTie1: Yup.string().when("tie_1", { is: "OTRA", then: Yup.string().required("Campo requerido") }),
    tie_2: Yup.string().required("Campo requerido"),
    otherTie2: Yup.string().when("tie_2", { is: "OTRA", then: Yup.string().required("Campo requerido") }),
    tie_3: Yup.string().required("Campo requerido"),
    otherTie3: Yup.string().when("tie_3", { is: "OTRA", then: Yup.string().required("Campo requerido") }),
    fullname: Yup.string().required("Campo requerido"),
    surname: Yup.string().required("Campo requerido"),
    secondSurname: Yup.string(),
    documentType: Yup.string().required("Campo requerido"),
    document: Yup.string().required("Campo requerido"),
    expeditionDate: Yup.string().required("Campo requerido"),
    expeditionCity: Yup.string().required("Campo requerido"),
    birthdate: Yup.string().required("Campo requerido"),
    birthCity: Yup.string().required("Campo requerido"),
    nationality: Yup.string().required("Campo requerido"),
    secondNationality: Yup.string(),
    departmentRes: Yup.string().required("Campo requerido"),
    cityRes: Yup.string().required("Campo requerido"),
    email: Yup.string().email().required("Campo requerido"),
    address: Yup.string().required("Campo requerido"),
    department: Yup.string().required("Campo requerido"),
    city: Yup.string().required("Campo requerido"),
    phone: Yup.string(),
    cellphone: Yup.string().required("Campo requerido"),
    mainActivity: Yup.string().required("Campo requerido"),
    sector: Yup.string().required("Campo requerido"),
    ciiu: Yup.string().required("Campo requerido"),
    activityType: Yup.string().required("Campo requerido"),
    otherActivityType: Yup.string().when("activityType", { is: "OTRO", then: Yup.string().required("Campo requerido") }),
    occupation: Yup.string().required("Campo requerido"),
    position: Yup.string().required("Campo requerido"),
    companyName: Yup.string().required("Campo requerido"),
    companyAddress: Yup.string().required("Campo requerido"),
    companyDepartment: Yup.string().required("Campo requerido"),
    companyCity: Yup.string().required("Campo requerido"),
    companyPhone: Yup.string(),
    optionalActivity: Yup.string(),
    secondeCiiu: Yup.string(),
    productOrService: Yup.string().required("Campo requerido"),
    income: Yup.number().required("Campo requerido"),
    expenses: Yup.number().required("Campo requerido"),
    assets: Yup.number().required("Campo requerido"),
    passives: Yup.number().required("Campo requerido"),
    heritage: Yup.number().required("Campo requerido"),
    otherIncome: Yup.number(),
    otherIncomeDesc: Yup.string().when( "otherIncome", { is: (val) => val > 0, then: Yup.string().required("Campo requerido") } ),
    publicExposed: Yup.string().required("Campo requerido"),
    tiesPublicExposed: Yup.string().required("Campo requerido"),
    publicResources: Yup.string().required("Campo requerido"),
    otherCountyObligations: Yup.string().required("Campo requerido"),
    sourceFunds: Yup.string().required("Campo requerido"),
    typeOfInternationalTransactions: Yup.string().required("Campo requerido"),
    otherTypeOfIntTransaction: Yup.string().when("typeOfInternationalTransactions", { is: "OTRO", then: Yup.string().required("Campo requerido") }),
    internationalFinancialProduct: Yup.string().required("Campo requerido"),
    internationalAccounts: Yup.string().required("Campo requerido"),
});